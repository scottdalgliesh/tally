name: CI

on:
  push:
    branches:
      - main
      - dev

jobs:
  CI:
    runs-on: windows-latest
    steps:
      - name: check out repository
        uses: actions/checkout@v2

      - name: set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: install and configure poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load dependencies cache if applicable
      - name: load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: isort
        run: poetry run isort .

      - name: black
        run: poetry run black .

      - name: pylint
        run: poetry run pylint tally tests -d fixme

      - name: mypy
        run: poetry run mypy

      - name: pytest
        run: poetry run pytest
